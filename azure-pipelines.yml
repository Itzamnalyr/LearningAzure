# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  BuildConfiguration: 'Release'
  BuildPlatform : 'Any CPU'

steps:

# DotNet Framework build items
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    projects: |
     SamLearnsAzure/SamLearnsAzure.Database/SamLearnsAzure.Database.sqlproj
    vstsFeed: '030a758a-428f-4445-bce8-2c19ad9a56b3'

- task: VSBuild@1
  displayName: 'Build database project'
  inputs:
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    solution: SamLearnsAzure/SamLearnsAzure.Database/SamLearnsAzure.Database.sqlproj


- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)\SamLearnsAzure\SamLearnsAzure.Database\bin\Output'
    Contents: '*'
    TargetFolder: '$(build.artifactstagingdirectory)\Database'

# Dotnet Core build items
- task: DotNetCoreCLI@2
  displayName: 'Restore dotnet core projects'
  inputs:
    command: restore
    projects: |
     SamLearnsAzure/SamLearnsAzure.Service/SamLearnsAzure.Service.csproj
     SamLearnsAzure/SamLearnsAzure.Web/SamLearnsAzure.Web.csproj
     SamLearnsAzure/SamLearnsAzure.Tests/SamLearnsAzure.Tests.csproj
     SamLearnsAzure/SamLearnsAzure.FunctionalTests/SamLearnsAzure.FunctionalTests.csproj

- task: DotNetCoreCLI@2
  displayName: 'Build dotnet core projects'
  inputs:
    command: build
    projects: |
     SamLearnsAzure/SamLearnsAzure.Service/SamLearnsAzure.Service.csproj
     SamLearnsAzure/SamLearnsAzure.Web/SamLearnsAzure.Web.csproj
     SamLearnsAzure/SamLearnsAzure.Tests/SamLearnsAzure.Tests.csproj
     SamLearnsAzure/SamLearnsAzure.FunctionalTests/SamLearnsAzure.FunctionalTests.csproj
    arguments: '--configuration $(BuildConfiguration)'
 
- task: DotNetCoreCLI@2
  displayName: 'Test dotnet code projects'
  inputs:
    command: test
    projects: |
     SamLearnsAzure/SamLearnsAzure.Tests/SamLearnsAzure.Tests.csproj
    arguments: '--configuration $(BuildConfiguration) --logger trx --collect "Code coverage" --settings:$(Build.SourcesDirectory)\SamLearnsAzure\SamLearnsAzure.Tests\CodeCoverage.runsettings'

- task: DotNetCoreCLI@2
  displayName: 'Publish dotnet core projects'
  inputs:
    command: publish
    publishWebProjects: false
    projects: |
     SamLearnsAzure/SamLearnsAzure.Service/SamLearnsAzure.Service.csproj
     SamLearnsAzure/SamLearnsAzure.Web/SamLearnsAzure.Web.csproj
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: true

- task: DotNetCoreCLI@2
  displayName: 'Publish dotnet core functional tests project'
  inputs:
    command: publish
    publishWebProjects: false
    projects: |
     SamLearnsAzure/SamLearnsAzure.FunctionalTests/SamLearnsAzure.FunctionalTests.csproj
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/FunctionalTests'
    zipAfterPublish: false

- task: CopyFiles@2
  displayName: 'Copy Selenium Files to: $(build.artifactstagingdirectory)/FunctionalTests/SamLearnsAzure.FunctionalTests'
  inputs:
    SourceFolder: 'SamLearnsAzure/SamLearnsAzure.FunctionalTests/bin/$(BuildConfiguration)/netcoreapp2.1'
    Contents: '*chromedriver.exe*'
    TargetFolder: '$(build.artifactstagingdirectory)/FunctionalTests/SamLearnsAzure.FunctionalTests'

# Publish the artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

# Run security tasks
- task: ms-codeanalysis.vss-microsoft-security-code-analysis.build-task-credscan.CredScan@2
  displayName: 'Run CredScan'

- task: ms-codeanalysis.vss-microsoft-security-code-analysis.build-task-postanalysis.PostAnalysis@1
  displayName: 'Post Analysis'
  inputs:
    CredScan: true
