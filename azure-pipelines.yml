trigger:
- master
pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

schedules:
- cron: "0 1/2 * * *"
  branches:
    include: 
    - master
  always: true

variables:
- group: 'SamLearnsAzure KeyVault'
- name: vmImage #Note this weird name/value syntax if you need to reference a variable group in variables
  value: 'windows-latest'

stages:
- stage: Build
  displayName: 'Build & Test stage'
  condition: eq('1', '2')
  jobs:
  - template: azure-pipelines-build-template.yml
    parameters:
      buildConfiguration: 'Release'
      buildPlatform: 'Any CPU'
      vmImage: $(vmImage)
      clientSecret: $(AppSettings--ClientSecretDev)
      redisCacheConnectionString: $(AppSettings--RedisCacheConnectionStringDev)

- stage: DeployPR
  displayName: 'Deploy PR Stage'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'), ne(variables['System.PullRequest.PullRequestId'], 'Null'))
  dependsOn: Build
  variables:
    ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
      prId: "$(System.PullRequest.PullRequestId)"
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      prId: '000'
    prUC: "PR$(prId)"
    prLC: "pr$(prId)"
  jobs:
  - template: azure-pipelines-deployment-template.yml
    parameters:
      #Note that pull request environments use Dev credentials
      applicationInsightsApiKey: '$(ApplicationInsights--APIKeyDev)'
      applicationInsightsApplicationId: '$(ApplicationInsights--ApplicationIdDev)'
      applicationInsightsInstrumentationKey: $(ApplicationInsights--InstrumentationKeyDev)
      applicationInsightsLocation: 'East US'
      appServiceContributerClientSecret: $(appServiceContributerClientSecret)
      ASPNETCOREEnvironmentSetting: 'Development'
      captureStartErrors: true
      cognitiveServicesSubscriptionKey: $(cognitiveServicesSubscriptionKey)
      environment: $(prUC)
      environmentLowercase: $(prLC)
      databaseLoginName: $(databaseLoginNameDev) 
      databaseLoginPassword: $(databaseLoginPasswordDev)
      databaseServerName: 'samsapp-$(prLC)-eu-sqlserver'
      godaddy_key: $(GoDaddyAPIKey)
      godaddy_secret: $(GoDaddyAPISecret)
      keyVaultClientId: '$(KeyVaultClientId)'
      keyVaultClientSecret: '$(KeyVaultClientSecret)'
      letsEncryptUniqueRoleAssignmentGuid: '6e4cff57-e63a-403e-822c-e98e5ba02$(System.PullRequest.PullRequestId)'
      imagesStorageCDNURL: 'https://samsapp-$(prLC)-eu-cdnendpoint.azureedge.net/'
      imagesStorageURL: 'https://samsapp$(prLC)eustorage.blob.core.windows.net/'
      redisCacheConnectionString: '$(AppSettings--RedisCacheConnectionStringDev)'
      resourceGroupName: 'SamLearnsAzure$(prUC)'
      resourceGroupLocation: 'East US'
      resourceGroupLocationShort: 'eu'
      roleAssignmentId: 'b24988ac-6180-42a0-ab88-20f7382dd24c'
      samsAppConnectionString: '$(ConnectionStrings--SamsAppConnectionStringDev)'
      serviceName: 'samsapp-$(prLC)-eu-service'
      serviceStagingUrl: 'https://samsapp-$(prLC)-eu-service-staging.azurewebsites.net/'
      serviceUrl: 'https://samsapp-$(prLC)-eu-service.azurewebsites.net/'
      storageAccountName: 'samsapp$(prLC)eustorage'
      storageAccountKey: '$(StorageAccountKeyProd)'
      userPrincipalLogin: $(userPrincipalLogin)
      vmImage: $(vmImage)
      websiteName: 'samsapp-$(prLC)-eu-web'
      websiteDomainName: '$(prLC).samlearnsazure.com'
      websiteStagingUrl: 'https://samsapp-$(prLC)-eu-web-staging.azurewebsites.net/'
      websiteUrl: 'https://samsapp-$(prLC)-eu-web.azurewebsites.net/'

- stage: DeployDev
  displayName: 'Deploy Dev Stage'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  dependsOn: Build
  jobs:
  - template: azure-pipelines-deployment-template.yml
    parameters:
      applicationInsightsApiKey: '$(ApplicationInsights--APIKeyDev)'
      applicationInsightsApplicationId: '$(ApplicationInsights--ApplicationIdDev)'
      applicationInsightsInstrumentationKey: $(ApplicationInsights--InstrumentationKeyDev)
      applicationInsightsLocation: 'East US'
      appServiceContributerClientSecret: $(appServiceContributerClientSecret)
      ASPNETCOREEnvironmentSetting: 'Development'
      captureStartErrors: true
      cognitiveServicesSubscriptionKey: $(cognitiveServicesSubscriptionKey)
      environment: 'Dev'  
      environmentLowercase: 'dev'
      databaseLoginName: $(databaseLoginNameDev) 
      databaseLoginPassword: $(databaseLoginPasswordDev)
      databaseServerName: 'samsapp-dev-eu-sqlserver'
      godaddy_key: $(GoDaddyAPIKey)
      godaddy_secret: $(GoDaddyAPISecret)
      keyVaultClientId: '$(KeyVaultClientId)'
      keyVaultClientSecret: '$(KeyVaultClientSecret)'
      letsEncryptUniqueRoleAssignmentGuid: '6e4cff57-e63a-403e-822c-e98e5ba02145'
      imagesStorageCDNURL: 'https://samsapp-dev-eu-cdnendpoint.azureedge.net/'
      imagesStorageURL: 'https://samsappdeveustorage.blob.core.windows.net/'
      redisCacheConnectionString: '$(AppSettings--RedisCacheConnectionStringDev)'
      resourceGroupName: 'SamLearnsAzureDev'
      resourceGroupLocation: 'East US'
      resourceGroupLocationShort: 'eu'
      roleAssignmentId: 'b24988ac-6180-42a0-ab88-20f7382dd24c'
      samsAppConnectionString: '$(ConnectionStrings--SamsAppConnectionStringDev)'
      serviceName: 'samsapp-dev-eu-service'
      serviceStagingUrl: 'https://samsapp-dev-eu-service-staging.azurewebsites.net/'
      serviceUrl: 'https://samsapp-dev-eu-service.azurewebsites.net/'
      storageAccountName: 'samsappdeveustorage'
      userPrincipalLogin: $(userPrincipalLogin)
      vmImage: $(vmImage)
      websiteName: 'samsapp-dev-eu-web'
      websiteDomainName: 'dev.samlearnsazure.com'
      websiteStagingUrl: 'https://samsapp-dev-eu-web-staging.azurewebsites.net/'
      websiteUrl: 'https://samsapp-dev-eu-web.azurewebsites.net/'

- stage: DeployQA
  displayName: 'Deploy QA Stage'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  dependsOn: DeployDev
  jobs:
  - template: azure-pipelines-deployment-template.yml
    parameters:
      applicationInsightsApiKey: '$(ApplicationInsights--APIKeyQA)'
      applicationInsightsApplicationId: '$(ApplicationInsights--ApplicationIdQA)'
      applicationInsightsInstrumentationKey: $(ApplicationInsights--InstrumentationKeyQA)
      applicationInsightsLocation: 'East US'
      appServiceContributerClientSecret: $(appServiceContributerClientSecret)
      captureStartErrors: false
      cognitiveServicesSubscriptionKey: $(cognitiveServicesSubscriptionKey)
      environment: 'QA'  
      environmentLowercase: 'qa'
      databaseLoginName: $(databaseLoginNameQA) 
      databaseLoginPassword: $(databaseLoginPasswordQA)
      databaseServerName: 'samsapp-qa-eu-sqlserver'
      godaddy_key: $(GoDaddyAPIKey)
      godaddy_secret: $(GoDaddyAPISecret)
      keyVaultClientId: '$(KeyVaultClientId)'
      keyVaultClientSecret: '$(KeyVaultClientSecret)'
      letsEncryptUniqueRoleAssignmentGuid: '6e4cff57-e63a-403e-822c-e98e5ba02146'
      imagesStorageCDNURL: 'https://samsapp-qa-eu-cdnendpoint.azureedge.net/'
      imagesStorageURL: 'https://samsappqaeustorage.blob.core.windows.net/'
      redisCacheConnectionString: '$(AppSettings--RedisCacheConnectionStringQA)'
      resourceGroupName: 'SamLearnsAzureQA'
      resourceGroupLocation: 'East US'
      resourceGroupLocationShort: 'eu'
      roleAssignmentId: 'b24988ac-6180-42a0-ab88-20f7382dd24c'
      samsAppConnectionString: '$(ConnectionStrings--SamsAppConnectionStringQA)'
      serviceName: 'samsapp-qa-eu-service'
      serviceStagingUrl: 'https://samsapp-qa-eu-service-staging.azurewebsites.net/'
      serviceUrl: 'https://samsapp-qa-eu-service.azurewebsites.net/'
      storageAccountName: 'samsappqaeustorage'
      userPrincipalLogin: $(userPrincipalLogin)
      vmImage: $(vmImage)
      websiteName: 'samsapp-qa-eu-web'
      websiteDomainName: 'qa.samlearnsazure.com'
      websiteStagingUrl: 'https://samsapp-qa-eu-web-staging.azurewebsites.net/'
      websiteUrl: 'https://samsapp-qa-eu-web.azurewebsites.net/'
      
- stage: DeployProd
  displayName: 'Deploy Prod Stage'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  dependsOn: DeployQA
  jobs:
  - template: azure-pipelines-deployment-template.yml
    parameters:
      applicationInsightsApiKey: '$(ApplicationInsights--APIKeyProd)'
      applicationInsightsApplicationId: '$(ApplicationInsights--ApplicationIdProd)'
      applicationInsightsInstrumentationKey: $(ApplicationInsights--InstrumentationKeyProd)
      applicationInsightsLocation: 'East US'
      appServiceContributerClientSecret: $(appServiceContributerClientSecret)
      captureStartErrors: false
      cognitiveServicesSubscriptionKey: $(cognitiveServicesSubscriptionKey)
      environment: 'Prod'  
      environmentLowercase: 'prod'
      databaseLoginName: $(databaseLoginNameProd) 
      databaseLoginPassword: $(databaseLoginPasswordProd)
      databaseServerName: 'samsapp-prod-eu-sqlserver'
      godaddy_key: $(GoDaddyAPIKey)
      godaddy_secret: $(GoDaddyAPISecret)
      keyVaultClientId: '$(KeyVaultClientId)'
      keyVaultClientSecret: '$(KeyVaultClientSecret)'
      letsEncryptUniqueRoleAssignmentGuid: '6e4cff57-e63a-403e-822c-e98e5ba02147'
      imagesStorageCDNURL: 'https://samsapp-prod-eu-cdnendpoint.azureedge.net/'
      imagesStorageURL: 'https://samsappprodeustorage.blob.core.windows.net/'
      redisCacheConnectionString: '$(AppSettings--RedisCacheConnectionStringProd)'
      resourceGroupName: 'SamLearnsAzureProd'
      resourceGroupLocation: 'East US'
      resourceGroupLocationShort: 'eu'
      roleAssignmentId: 'b24988ac-6180-42a0-ab88-20f7382dd24c'
      samsAppConnectionString: '$(ConnectionStrings--SamsAppConnectionStringProd)'
      serviceName: 'samsapp-prod-eu-service'
      serviceStagingUrl: 'https://samsapp-prod-eu-service-staging.azurewebsites.net/'
      serviceUrl: 'https://samsapp-prod-eu-service.azurewebsites.net/'
      storageAccountName: 'samsappprodeustorage'
      userPrincipalLogin: $(userPrincipalLogin)
      vmImage: $(vmImage)
      websiteName: 'samsapp-prod-eu-web'
      websiteDomainName: 'samlearnsazure.com'
      websiteStagingUrl: 'https://samsapp-prod-eu-web-staging.azurewebsites.net/'
      websiteUrl: 'https://samsapp-prod-eu-web.azurewebsites.net/'     