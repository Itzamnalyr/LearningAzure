parameters: # defaults for any parameters that aren't specified
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  vmImage: 'windows-latest'
  clientSecret: '***secret'
  redisCacheConnectionString: '***secret'

jobs:


  - job: BuildDotNet31
    displayName: 'Build .NET Core 3.1 job'
    pool:
      vmImage: ${{parameters.vmImage}}
    variables:
      buildNumber: '1.0.0.0'
    steps:
    - task: dutchworkz.DisplayAllVariables.DisplayAllVariables.DutchWorkzToolsAllVariables@1
      displayName: 'Show all build variables in build output.'
    - task: PowerShell@2
      displayName: 'Generate build version number'
      inputs:
        targetType: FilePath
        filePath: SamLearnsAzure/BuildVersion.ps1
        arguments: -ProjectFile "SamLearnsAzure/SamLearnsAzure.Web/SamLearnsAzure.Web.csproj"
    - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
      displayName: 'Prepare analysis on SonarCloud'
      inputs:
        SonarCloud: 'SonarQube connection'
        organization: samsmithnz
        projectKey: SamLearnsAzure
    - task: DotNetCoreCLI@2
      displayName: 'Restore dotnet core 3.1 projects'
      inputs:
        command: restore
        projects: |
         SamLearnsAzure/SamLearnsAzure.Service/SamLearnsAzure.Service.csproj
         SamLearnsAzure/SamLearnsAzure.Web/SamLearnsAzure.Web.csproj
        vstsFeed: '030a758a-428f-4445-bce8-2c19ad9a56b3'
    - task: DotNetCoreCLI@2
      displayName: 'Publish dotnet core 3.1 projects'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
         SamLearnsAzure/SamLearnsAzure.Service/SamLearnsAzure.Service.csproj
         SamLearnsAzure/SamLearnsAzure.Web/SamLearnsAzure.Web.csproj
        arguments: '--configuration ${{parameters.buildConfiguration}} --output $(build.artifactstagingdirectory) -p:Version=$(buildNumber)'
        zipAfterPublish: true
    - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
      displayName: 'Run Code Analysis on SonarCloud'
      enabled: false
    - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
      displayName: 'Publish Quality Gate Result on SonarCloud'
      enabled: false
    # Run security tasks
    - task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-credscan.CredScan@2
      displayName: 'Run CredScan'
      inputs:
        suppressionsFile: SamLearnsAzure/CredScan/CredScanSuppressions.json
      enabled: false
    - task: WhiteSource Bolt@19
      enabled: true
    #Confirm that security tasks passed successfully before finalizing the build
    - task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-postanalysis.PostAnalysis@1
      displayName: 'Post Analysis'
      inputs:
        CredScan: true
      enabled: false
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'


  - job: BuildDotNet5
    displayName: 'Build .NET 5 job'
    pool:
      vmImage: ${{parameters.vmImage}}
    variables:
      buildNumber: '1.0.0.0'
    steps:
    - task: dutchworkz.DisplayAllVariables.DisplayAllVariables.DutchWorkzToolsAllVariables@1
      displayName: 'Show all build variables in build output.'
    - task: PowerShell@2
      displayName: 'Generate build version number'
      inputs:
        targetType: FilePath
        filePath: SamLearnsAzure/BuildVersion.ps1
        arguments: -ProjectFile "SamLearnsAzure/SamLearnsAzure.Web2/SamLearnsAzure.Web2.csproj"
    - task: UseDotNet@2
      displayName: 'Install .Net 5 SDK'
      inputs:
        packageType: 'sdk'
        version: '5.0.100'
    - task: DotNetCoreCLI@2
      displayName: 'Restore dotnet 5 projects'
      inputs:
        command: restore
        projects: |
         SamLearnsAzure/SamLearnsAzure.Service2/SamLearnsAzure.Service2.csproj
         SamLearnsAzure/SamLearnsAzure.Web2/SamLearnsAzure.Web2.csproj
        vstsFeed: '030a758a-428f-4445-bce8-2c19ad9a56b3'
    - task: DotNetCoreCLI@2
      displayName: 'Publish dotnet 5 projects'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
         SamLearnsAzure/SamLearnsAzure.Service2/SamLearnsAzure.Service2.csproj
         SamLearnsAzure/SamLearnsAzure.Web2/SamLearnsAzure.Web2.csproj
        arguments: '--configuration ${{parameters.buildConfiguration}} --output $(build.artifactstagingdirectory) -p:Version=$(buildNumber) --self-contained true --runtime win-x86'
        zipAfterPublish: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'


  - job: BuildTest
    displayName: 'Tests .NET Core projects job'
    pool:
      vmImage: ${{parameters.vmImage}}
    variables:
      buildNumber: '1.0.0.0'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore dotnet core projects'
      inputs:
        command: restore
        projects: |
         SamLearnsAzure/SamLearnsAzure.Tests/SamLearnsAzure.Tests.csproj
        vstsFeed: '030a758a-428f-4445-bce8-2c19ad9a56b3'
    - powershell: |  
        $pathToJson = "SamLearnsAzure/SamLearnsAzure.Tests/appsettings.json"
        $a = Get-Content $pathToJson | ConvertFrom-Json
        $a.AppSettings.ClientSecret = "${{parameters.clientSecret}}"
        $a.AppSettings.RedisCacheConnectionString = "${{parameters.redisCacheConnectionString}}"
        $a | ConvertTo-Json | set-content $pathToJson   
    - task: DotNetCoreCLI@2
      displayName: 'Test dotnet code projects'
      inputs:
        command: test
        projects: |
         SamLearnsAzure/SamLearnsAzure.Tests/SamLearnsAzure.Tests.csproj
        arguments: '--configuration ${{parameters.buildConfiguration}} --logger trx --collect "Code coverage" --settings:$(Build.SourcesDirectory)\SamLearnsAzure\SamLearnsAzure.Tests\CodeCoverage.runsettings'
        vstsFeed: '030a758a-428f-4445-bce8-2c19ad9a56b3' 
      enabled: false


  - job: BuildFunctional
    displayName: 'Build and publish functional tests job'
    pool:
      vmImage: ${{parameters.vmImage}}
    variables:
      buildNumber: '1.0.0.0'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore dotnet core projects'
      inputs:
        command: restore
        projects: |
         SamLearnsAzure/SamLearnsAzure.FunctionalTests/SamLearnsAzure.FunctionalTests.csproj
        vstsFeed: '030a758a-428f-4445-bce8-2c19ad9a56b3'
    - task: DotNetCoreCLI@2
      displayName: 'Publish dotnet core functional tests project'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
         SamLearnsAzure/SamLearnsAzure.FunctionalTests/SamLearnsAzure.FunctionalTests.csproj
        arguments: '--configuration ${{parameters.buildConfiguration}} --output $(build.artifactstagingdirectory)/FunctionalTests'
        zipAfterPublish: false
    - task: CopyFiles@2
      displayName: 'Copy Selenium Files to: $(build.artifactstagingdirectory)/FunctionalTests/SamLearnsAzure.FunctionalTests'
      inputs:
        SourceFolder: 'SamLearnsAzure/SamLearnsAzure.FunctionalTests/bin/${{parameters.buildConfiguration}}/netcoreapp3.1'
        Contents: '*chromedriver.exe*'
        TargetFolder: '$(build.artifactstagingdirectory)/FunctionalTests/SamLearnsAzure.FunctionalTests'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'


  - job: BuildARMTemplates
    displayName: 'Build Copy ARM templates job'
    pool:
      vmImage: ${{parameters.vmImage}}
    steps:
    - task: CopyFiles@2
      displayName: 'Copy environment ARM template files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)\SamLearnsAzure\SamLearnsAzure.Environment.ARMTemplate'
        Contents: '**\*' # **\* = Copy all files and all files in sub directories
        TargetFolder: '$(build.artifactstagingdirectory)\EnvironmentARMTemplate'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'


  - job: BuildDotNetFramework
    displayName: 'Build .NET Framework job'
    pool:
      vmImage: ${{parameters.vmImage}}
    steps:
    - task: VSBuild@1
      displayName: 'Build database project'
      inputs:
        platform: '${{parameters.buildPlatform}}'
        configuration: '${{parameters.buildConfiguration}}'
        solution: SamLearnsAzure/SamLearnsAzure.Database/SamLearnsAzure.Database.sqlproj
    - task: CopyFiles@2
      displayName: 'Copy database files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)\SamLearnsAzure\SamLearnsAzure.Database\bin\Output'
        Contents: '*' # * = Copy all files in the current directory
        TargetFolder: '$(build.artifactstagingdirectory)\Database'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

