{
  "contentVersion": "1.0.0.0",
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "parameters": {
    "appPrefix": {
      "type": "string",
      "minLength": 1,
      "maxLength": 15
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "core",
        "test",
        "data"
      ]
    },
    "locationShort": {
      "type": "string",
      "minLength": 2,
      "maxLength": 3,
      "metadata": {
        "description": "Two to three character value that identifies the region into which the resources are deployed. Should map to the resource group's location."
      }
    },
    "hostingPlanSKUName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "hostingPlanSKUCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "storageAccountTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard"
      ]
    },
    "SamLearnsAzureBlobStorage_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Secure string for 'connectionString' of 'SamLearnsAzureBlobStorageConnection'"
      }
    },
    "SamLearnsAzureSqlDatabase_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Secure string for 'connectionString' of 'SamLearnsAzureSqlDatabaseConnection'"
      }
    },
    "vaultAdminSecretsPermissions": {
      "type": "array",
      "defaultValue": [ "all" ],
      "metadata": {
        "description": "Permissions to grant user to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },
    "vaultUserSecretsPermissions": {
      "type": "array",
      "defaultValue": [ "get", "list" ],
      "metadata": {
        "description": "Permissions to grant user to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "vaultEnabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
      }
    },
    "vaultEnabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies if the vault is enabled for ARM template deployment"
      }
    },
    "vaultEnableVaultForVolumeEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for volume encryption"
      }
    },
    "userPrincipalLogin": {
      "type": "string",
      "metadata": {
        "description": "login nameof the AAD user that will have admin access to SQL server and the Key Vault. "
      }
    },
    "userPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the AAD user that will have admin access to the SQL server and the Key Vault. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"
      }
    },
    "azureDevOpsPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the service principal that will have Azure DevOps access to the vault. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"
      }
    },
    "integrationTestsPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the service principal that is used to run integration tests. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(parameters('appPrefix'), parameters('environment'), parameters('locationShort'), 'storage')]",
    "factoryName": "[concat(parameters('appPrefix'), '-', parameters('environment'), '-', parameters('locationShort'), '-datafactory')]",
    "factoryId": "[concat('Microsoft.DataFactory/factories/', variables('factoryName'))]",
    "functionName": "[concat(parameters('appPrefix'), '-', parameters('environment'), '-', parameters('locationShort'), '-function')]",
    "hostingPlanName": "[concat(parameters('appPrefix'), '-', parameters('environment'), '-', parameters('locationShort'), '-hostingplan')]",
    "applicationInsightsName": "[concat(parameters('appPrefix'), '-', parameters('environment'), '-', parameters('locationShort'), '-appinsights')]",
    "keyVaultName": "[concat(parameters('appPrefix'), '-', parameters('environment'), '-', parameters('locationShort'), '-keyvault')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Storage Account"
      },
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "[parameters('storageAccountTier')]"
      },
      "kind": "Storage",
      "properties": {
        "azureFilesAadIntegration": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "[parameters('vaultEnabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('vaultEnabledForTemplateDeployment')]",
        "enabledForVolumeEncryption": "[parameters('vaultEnableVaultForVolumeEncryption')]",
        "tenantId": "[subscription().tenantid]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantid]",
            "objectId": "[parameters('userPrincipalId')]",
            "permissions": {
              "keys": [],
              "secrets": "[parameters('vaultAdminSecretsPermissions')]",
              "certificates": []
            }
          },
          //{
          //  "tenantId": "[subscription().tenantid]",
          //  "objectId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('serviceAPIName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
          //  "permissions": {
          //    "keys": [],
          //    "secrets": "[parameters('vaultUserSecretsPermissions')]",
          //    "certificates": []
          //  }
          //},
          //{
          //  "tenantId": "[subscription().tenantid]",
          //  "objectId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webSiteName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
          //  "permissions": {
          //    "keys": [],
          //    "secrets": "[parameters('vaultUserSecretsPermissions')]",
          //    "certificates": []
          //  }
          //},
          {
            "tenantId": "[subscription().tenantid]",
            "objectId": "[parameters('azureDevOpsPrincipalId')]",
            "permissions": {
              "keys": [],
              "secrets": "[parameters('vaultAdminSecretsPermissions')]",
              "certificates": []
            }
          },
          {
            "tenantId": "[subscription().tenantid]",
            "objectId": "[parameters('integrationTestsPrincipalId')]",
            "permissions": {
              "keys": [],
              "secrets": "[parameters('vaultUserSecretsPermissions')]",
              "certificates": []
            }
          }
        ],
        "sku": {
          "name": "[parameters('vaultSku')]",
          "family": "A"
        }
      },
      "resources": []
    },
    {
      "type": "microsoft.insights/components",
      "kind": "web",
      "name": "[variables('applicationInsightsName')]",
      "apiVersion": "2015-05-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "applicationType": "web",
        "displayName": "Application Insights"
      },
      "scale": null,
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "HockeyAppId": null,
        "SamplingPercentage": null
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[parameters('hostingPlanSKUName')]",
        "capacity": "[parameters('hostingPlanSKUCapacity')]"
      },
      "kind": "functionapp",
      "name": "[variables('hostingPlanName')]",
      "apiVersion": "2016-09-01",
      "tags": {
        "displayName": "Hosting Plan"
      },
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('functionName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "displayName": "Function Webapp"

      },
      "scale": null,
      "properties": {
        "enabled": true,
        "siteConfig": {
          "AlwaysOn": true
        },
        "hostNameSslStates": [
          {
            "name": "[concat(variables('functionName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('functionName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null,
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ]
    },
    {
      "name": "[variables('factoryName')]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.DataFactory/factories",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Data Factory"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "resources": [
        {
          "name": "[concat(variables('factoryName'), '/SamLearnsAzureBlobStorageConnection')]",
          "type": "Microsoft.DataFactory/factories/linkedServices",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Blob Storage Connection linked service"
          },
          "properties": {
            "annotations": [],
            "type": "AzureBlobStorage",
            "typeProperties": {
              "connectionString": "[parameters('SamLearnsAzureBlobStorage_connectionString')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SamLearnsAzureSqlDatabaseConnection')]",
          "type": "Microsoft.DataFactory/factories/linkedServices",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "SQL Azure Database Connection linked service"
          },
          "properties": {
            "annotations": [],
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": "[parameters('SamLearnsAzureSqlDatabase_connectionString')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceColors')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source colors dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "id",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "rgb",
                "type": "String"
              },
              {
                "name": "is_trans",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "/N",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "colors.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceInventories')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source inventories dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "id",
                "type": "String"
              },
              {
                "name": "version",
                "type": "String"
              },
              {
                "name": "set_num",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "inventories.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceInventoryParts')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source inventory parts dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "inventory_id",
                "type": "String"
              },
              {
                "name": "part_num",
                "type": "String"
              },
              {
                "name": "color_id",
                "type": "String"
              },
              {
                "name": "quantity",
                "type": "String"
              },
              {
                "name": "is_spare\r",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "\n",
                "quoteChar": "\"",
                "nullValue": "",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "inventory_parts.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceInventorySets')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source inventory sets dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "inventory_id",
                "type": "String"
              },
              {
                "name": "set_num",
                "type": "String"
              },
              {
                "name": "quantity\r",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "\n",
                "quoteChar": "\"",
                "nullValue": "\\N",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "inventory_sets.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourcePartCategories')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source part categories dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "id",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "\\N",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "part_categories.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourcePartRelationships')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source part relationships dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "rel_type",
                "type": "String"
              },
              {
                "name": "child_part_num",
                "type": "String"
              },
              {
                "name": "parent_part_num",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "part_relationships.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceParts')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source parts dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "part_num",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "part_cat_id",
                "type": "String"
              },
              {
                "name": "part_material_id",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "\\N",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "parts.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceSets')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source sets dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "set_num",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "year",
                "type": "String"
              },
              {
                "name": "theme_id",
                "type": "String"
              },
              {
                "name": "num_parts",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "\\N",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "sets.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SourceThemes')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Source themes dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureBlobStorageConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureBlob",
            "structure": [
              {
                "name": "id",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "parent_id\r",
                "type": "String"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "",
                "quoteChar": "\"",
                "nullValue": "",
                "treatEmptyAsNull": true,
                "skipLineCount": 0,
                "firstRowAsHeader": true
              },
              "fileName": "themes.csv",
              "folderPath": "csvfiles"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureBlobStorageConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationColors')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination colors dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "id",
                "type": "Int32"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "rgb",
                "type": "String"
              },
              {
                "name": "is_trans",
                "type": "Boolean"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[colors]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationInventories')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination inventories dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "id",
                "type": "Int32"
              },
              {
                "name": "version",
                "type": "Int32"
              },
              {
                "name": "set_num",
                "type": "String"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[inventories]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationInventoryParts')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination inventory parts dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "inventory_id",
                "type": "Int32"
              },
              {
                "name": "part_num",
                "type": "String"
              },
              {
                "name": "color_id",
                "type": "Int32"
              },
              {
                "name": "quantity",
                "type": "Int32"
              },
              {
                "name": "is_spare",
                "type": "Boolean"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[inventory_parts]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationInventorySets')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination inventory sets dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "inventory_id",
                "type": "Int32"
              },
              {
                "name": "set_num",
                "type": "String"
              },
              {
                "name": "quantity",
                "type": "Int32"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[inventory_sets]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationPartCategories')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination part categories dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "id",
                "type": "Int32"
              },
              {
                "name": "name",
                "type": "String"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[part_categories]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationPartRelationships')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination part relationships dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "rel_type",
                "type": "String"
              },
              {
                "name": "child_part_num",
                "type": "String"
              },
              {
                "name": "parent_part_num",
                "type": "String"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[part_relationships]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationParts')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination parts dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "part_num",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "part_cat_id",
                "type": "Int32"
              },
              {
                "name": "part_material_id",
                "type": "Int32"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[parts]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationSets')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination sets dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "set_num",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "year",
                "type": "Int32"
              },
              {
                "name": "theme_id",
                "type": "Int32"
              },
              {
                "name": "num_parts",
                "type": "Int32"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[sets]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/DestinationThemes')]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Destination themes dataset"
          },
          "properties": {
            "linkedServiceName": {
              "referenceName": "SamLearnsAzureSqlDatabaseConnection",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "AzureSqlTable",
            "structure": [
              {
                "name": "id",
                "type": "Int32"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "parent_id",
                "type": "Int32"
              }
            ],
            "typeProperties": {
              "tableName": "[concat('[', 'dbo].[themes]')]"
            }
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/linkedServices/SamLearnsAzureSqlDatabaseConnection')]"
          ]
        },
        {
          "name": "[concat(variables('factoryName'), '/SamLearnsAzurePipeline')]",
          "type": "Microsoft.DataFactory/factories/pipelines",
          "apiVersion": "2018-06-01",
          "tags": {
            "displayName": "Data factory pipeline"
          },
          "properties": {
            "activities": [
              {
                "name": "Clear Database",
                "type": "SqlServerStoredProcedure",
                "dependsOn": [],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "storedProcedureName": "dbo.[ClearDataFromTables]"
                },
                "linkedServiceName": {
                  "referenceName": "SamLearnsAzureSqlDatabaseConnection",
                  "type": "LinkedServiceReference"
                }
              },
              {
                "name": "Copy Themes",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Clear Database",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "id": "id",
                      "name": "name",
                      "parent_id\r": "parent_id"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceThemes",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationThemes",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Sets",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Copy Themes",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "set_num": "set_num",
                      "name": "name",
                      "year": "year",
                      "theme_id": "theme_id",
                      "num_parts": "num_parts"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceSets",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationSets",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Inventories",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Copy Sets",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "id": "id",
                      "version": "version",
                      "set_num": "set_num"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceInventories",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationInventories",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Colors",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Clear Database",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "id": "id",
                      "name": "name",
                      "rgb": "rgb",
                      "is_trans": "is_trans"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceColors",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationColors",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Inventory Sets",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Copy Inventories",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "inventory_id": "inventory_id",
                      "set_num": "set_num",
                      "quantity\r": "quantity"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceInventorySets",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationInventorySets",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Parts",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Copy Part Categories",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "part_num": "part_num",
                      "name": "name",
                      "part_cat_id": "part_cat_id",
                      "part_material_id": "part_material_id"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceParts",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationParts",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Part Categories",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Clear Database",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "id": "id",
                      "name": "name"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourcePartCategories",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationPartCategories",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Inventory Parts",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Copy Colors",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  },
                  {
                    "activity": "Copy Parts",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  },
                  {
                    "activity": "Copy Inventories",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "inventory_id": "inventory_id",
                      "part_num": "part_num",
                      "color_id": "color_id",
                      "quantity": "quantity",
                      "is_spare\r": "is_spare"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourceInventoryParts",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationInventoryParts",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "Copy Part Relationships",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "Copy Inventory Sets",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  },
                  {
                    "activity": "Copy Inventory Parts",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "BlobSource",
                    "recursive": true
                  },
                  "sink": {
                    "type": "SqlSink",
                    "writeBatchSize": 10000
                  },
                  "enableStaging": false,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": {
                      "rel_type": "rel_type",
                      "child_part_num": "child_part_num",
                      "parent_part_num": "parent_part_num"
                    }
                  }
                },
                "inputs": [
                  {
                    "referenceName": "SourcePartRelationships",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "DestinationPartRelationships",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              }
            ],
            "annotations": []
          },
          "dependsOn": [
            "[concat('/Microsoft.DataFactory/factories/', variables('factoryName'))]",
            "[concat(variables('factoryId'), '/datasets/SourceColors','')]",
            "[concat(variables('factoryId'), '/datasets/SourceInventories','')]",
            "[concat(variables('factoryId'), '/datasets/SourceInventoryParts','')]",
            "[concat(variables('factoryId'), '/datasets/SourceInventorySets','')]",
            "[concat(variables('factoryId'), '/datasets/SourcePartCategories','')]",
            "[concat(variables('factoryId'), '/datasets/SourcePartRelationships','')]",
            "[concat(variables('factoryId'), '/datasets/SourceParts','')]",
            "[concat(variables('factoryId'), '/datasets/SourceSets','')]",
            "[concat(variables('factoryId'), '/datasets/SourceThemes','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationColors','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationInventories','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationInventoryParts','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationInventorySets','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationPartCategories','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationPartRelationships','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationParts','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationSets','')]",
            "[concat(variables('factoryId'), '/datasets/DestinationThemes','')]"
          ]
        }
      ]
    }
  ]
}