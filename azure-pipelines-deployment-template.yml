parameters: # defaults for any parameters that aren't specified
  applicationInsightsApiKey: '$(ApplicationInsights--ApplicationIdDev)'
  applicationInsightsApplicationId: '$(ApplicationInsights--ApplicationIdDev)'
  applicationInsightsInstrumentationKey: $(ApplicationInsights--InstrumentationKeyDev)
  applicationInsightsLocation: 'East US'
  letsEncryptAppServiceContributerClientSecret: '***secret'
  ASPNETCOREEnvironmentSetting: 'Release'
  cognitiveServicesSubscriptionKey: '***secret'
  environment: 'Dev'  
  environmentLowercase: 'dev'
  databaseLoginName: '***secret'
  databaseLoginPassword: '***secret'
  databaseServerName: 'samsapp-dev-eu-sqlserver'
  databaseName: samsdb
  frontDoorDomainName: 'devfd.samlearnsazure.com'
  godaddy_key: '***secret'
  godaddy_secret: '***secret'
  keyVaultName: 'samsapp-data-eu-keyvault'
  keyVaultURL: 'https://samsapp-data-eu-keyvault.vault.azure.net/'
  keyVaultClientId: '***secret'
  keyVaultClientSecret: '***secret'
  letsEncryptUniqueRoleAssignmentGuid: '6e4cff57-e63a-403e-822c-e98e5ba02145'
  letsEncryptUniqueRoleAssignmentGuid2: '6e4cff57-e63a-403e-822c-e98e5ba02146'
  imagesStorageCDNURL: 'https://samsapp-dev-eu-cdnendpoint.azureedge.net/partimages'
  imagesStorageURL: 'https://samsappdeveustorage.blob.core.windows.net/partimages'
  partImagesContainerName: 'partimages'
  setImagesContainerName: 'setimages'
  redisCacheConnectionString: '***secret'
  resourceGroupName: 'SamLearnsAzureDev'
  resourceGroupLocation: 'East US'
  resourceGroupLocationShort: 'eu'
  roleAssignmentId: 'b24988ac-6180-42a0-ab88-20f7382dd24c'
  samsAppConnectionString: '***secret'
  serviceName: 'samsapp-dev-eu-service'
  serviceStagingUrl: 'https://samsapp-dev-eu-service-staging.azurewebsites.net/'
  serviceUrl: 'https://samsapp-dev-eu-service.azurewebsites.net/'
  stagingSlotName: 'Staging'
  storageAccountName: 'samsappdeveustorage'
  storageAccountKey: '***secret'
  userPrincipalLogin: '***secret'
  vmImage: 'windows-latest'
  websiteName: 'samsapp-dev-eu-web'
  websiteDomainName: 'dev.samlearnsazure.com'
  websiteStagingUrl: 'https://samsapp-dev-eu-web-staging.azurewebsites.net/'
  websiteUrl: 'https://samsapp-dev-eu-web.azurewebsites.net/'
  website2Name: 'samsapp-dev2-eu-web'
  website2DomainName: 'dev2.samlearnsazure.com'
  website2StagingUrl: 'https://samsapp-dev2-eu-web-staging.azurewebsites.net/'
  website2Url: 'https://samsapp-dev2-eu-web.azurewebsites.net/'
 
jobs:
  - deployment: DeployCoreInfrastructure
    displayName: "Deploy key vault and storage"
    environment: ${{parameters.environment}}
    pool:
      vmImage: windows-latest    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: dutchworkz.DisplayAllVariables.DisplayAllVariables.DutchWorkzToolsAllVariables@1
            displayName: 'Show all build variables in build output.'
          - task: AzurePowerShell@4 
            displayName: 'Run Azure PowerShell to remove deployments older than 30 days' #This addresses a deployment quota limit: https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deployment-quota-exceeded
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              ScriptPath: '$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/PowerShell/DeploymentCleanup.ps1'
              ScriptArguments: '-ResourceGroupName "${{parameters.resourceGroupName}}"'
              azurePowerShellVersion: LatestVersion
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureCore.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -administratorUserSid "076f7430-ef4f-44e0-aaa7-d00c0f75b0b8" -azureDevOpsPrincipalId "e60b0582-1d81-4ab3-92db-fbdc53ddeb92"
            enabled: true


  - deployment: DeployCDN
    displayName: "Deploy CDN"
    environment: ${{parameters.environment}}
    dependsOn: DeployCoreInfrastructure
    pool:
      vmImage: windows-latest    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureCDN.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" 
            enabled: true


  - deployment: DeployRedis
    displayName: "Deploy redis"
    environment: ${{parameters.environment}}
    dependsOn: DeployCoreInfrastructure
    pool:
      vmImage: windows-latest   
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureRedis.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" 
            enabled: true


  - deployment: DeployDatabase
    displayName: "Deploy SQL"
    environment: ${{parameters.environment}}
    dependsOn: DeployCoreInfrastructure
    pool:
      vmImage: windows-latest          
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureSQL.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -sqlDatabaseName "${{parameters.databaseName}}" -sqlAdministratorLoginUser "${{parameters.databaseLoginName}}" -sqlAdministratorLoginPassword "${{parameters.databaseLoginPassword}}" -administratorUserLogin "c6193b13-08e7-4519-b7b4-e6b1875b15a8" -administratorUserSid "076f7430-ef4f-44e0-aaa7-d00c0f75b0b8" -storageAccountAccessKey "${{parameters.storageAccountKey}}" -azureDevOpsPrincipalId "e60b0582-1d81-4ab3-92db-fbdc53ddeb92"
            enabled: true
          - task: AzureCLI@2
            displayName: 'Restore database from backup, if needed'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptLocation: scriptPath
              scriptPath: '$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/PowerShell/ImportBACPAC.ps1'
              arguments: '-ResourceGroupName ${{parameters.resourceGroupName}} -DBServerName ${{parameters.databaseServerName}} -ServerAdmin ${{parameters.databaseLoginName}} -ServerPassword ${{parameters.databaseLoginPassword}} -DatabaseName "${{parameters.databaseName}}" -StorageAccountName "samsappprodeustorage" -StorageUri "https://samsappprodeustorage.blob.core.windows.net/" -StorageAccountKey ${{parameters.storageAccountKey}} -StorageContainerName "bacpacs" -Edition "Basic" -ServiceObjectiveName "Basic" -RunImportAlways $false'           
          - task: SqlAzureDacpacDeployment@1
            displayName: 'Azure SQL dacpac publish'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              ServerName: '${{parameters.databaseServerName}}.database.windows.net'
              DatabaseName: '${{parameters.databaseName}}'
              SqlUsername: '${{parameters.databaseLoginName}}'
              SqlPassword: '${{parameters.databaseLoginPassword}}'
              DacpacFile: '$(build.artifactstagingdirectory)/drop/Database/SamLearnsAzure.Database.dacpac'
              additionalArguments: '/p:BlockOnPossibleDataLoss=true'


  - deployment: DeployInfrastructureWebCore
    displayName: "Deploy web core infrastructure"
    environment: ${{parameters.environment}}
    dependsOn: DeployCoreInfrastructure
    pool:
      vmImage: windows-latest    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebCore.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -contactEmailAddress "samsmithnz@gmail.com"
            enabled: true             
          - task: PowerShell@2
            displayName: 'Set FrontDoor CName DNS entries in GoDaddy'
            inputs:
              targetType: FilePath
              filePath: '$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/PowerShell/GoDaddyDNSSetup.ps1'
              arguments: -godaddy_domain "samlearnsazure.com" -godaddy_name "${{parameters.environmentLowercase}}fd" -godaddy_destination "samsapp-${{parameters.environmentLowercase}}-${{parameters.resourceGroupLocationShort}}-frontdoor.azurefd.net" -godaddy_type "CNAME" -godaddy_key "${{parameters.godaddy_key}}" -godaddy_secret "${{parameters.godaddy_secret}}"
            continueOnError: true # GoDaddy is not essential, and seems to have some reliability issues, so marking this to continue on any errors
            enabled: true
          - task: PowerShell@2
            displayName: 'Set Website CName DNS entries in GoDaddy'
            inputs:
              targetType: FilePath
              filePath: '$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/PowerShell/GoDaddyDNSSetup.ps1'
              arguments: -godaddy_domain "samlearnsazure.com" -godaddy_name "${{parameters.environmentLowercase}}" -godaddy_destination "${{parameters.websiteName}}.azurewebsites.net" -godaddy_type "CNAME" -godaddy_key "${{parameters.godaddy_key}}" -godaddy_secret "${{parameters.godaddy_secret}}"
            continueOnError: true # GoDaddy is not essential, and seems to have some reliability issues, so marking this to continue on any errors
            enabled: true
          - task: PowerShell@2
            displayName: 'Set Website2 CName DNS entries in GoDaddy'
            inputs:
              targetType: FilePath
              filePath: '$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/PowerShell/GoDaddyDNSSetup.ps1'
              arguments: -godaddy_domain "samlearnsazure.com" -godaddy_name "${{parameters.environmentLowercase}}2" -godaddy_destination "${{parameters.website2Name}}.azurewebsites.net" -godaddy_type "CNAME" -godaddy_key "${{parameters.godaddy_key}}" -godaddy_secret "${{parameters.godaddy_secret}}"
            continueOnError: true # GoDaddy is not essential, and seems to have some reliability issues, so marking this to continue on any errors
            enabled: true


  - deployment: DeployWebServiceApp
    displayName: "Deploy webservice app"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployInfrastructureWebCore
    pool:
      vmImage: windows-latest        
    variables:
      ApplicationInsights.InstrumentationKey: ${{parameters.applicationInsightsInstrumentationKey}}
      AppSettings.Environment: ${{parameters.environment}}
      AppSettings.KeyVaultURL: ${{parameters.keyVaultURL}}
      AppSettings.ImagesStorageCDNURL: ${{parameters.imagesStorageCDNURL}}
      AppSettings.ImagesStorageURL: ${{parameters.imagesStorageURL}}
      AppSettings.PartImagesContainerName: ${{parameters.partImagesContainerName}}
      AppSettings.SetImagesContainerName: ${{parameters.setImagesContainerName}}
      AppSettings.RedisCacheConnectionString: ${{parameters.redisCacheConnectionString}}
      AppSettings.WebServiceURL: ${{parameters.serviceURL}}
      AppSettings.StorageAccountName: ${{parameters.storageAccountName}}
      AppSettings.CognitiveServicesSubscriptionKey: ${{parameters.cognitiveServicesSubscriptionKey}}
      AppSettings.CaptureStartErrors: ${{parameters.captureStartErrors}}
      ConnectionStrings.SamsAppConnectionString: ${{parameters.samsAppConnectionString}} 
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebService.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -sqlDatabaseName "${{parameters.databaseName}}" -sqlAdministratorLoginUser "${{parameters.databaseLoginName}}" -sqlAdministratorLoginPassword "${{parameters.databaseLoginPassword}}"
            enabled: true
          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy: web service'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              WebAppName: '${{parameters.serviceName}}'
              DeployToSlotFlag: true
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SlotName: '${{parameters.stagingSlotName}}'
              Package: '$(build.artifactstagingdirectory)/drop/SamLearnsAzure.Service.zip'
              RemoveAdditionalFilesFlag: true
              TakeAppOfflineFlag: false
              RenameFilesFlag: true
              JSONFiles: '**/appsettings.json'
              AppSettings: '-ASPNETCORE_ENVIRONMENT "${{parameters.ASPNETCOREEnvironmentSetting}}"'
              ConfigurationSettings: '-ApplicationInsights.InstrumentationKey $(applicationInsightsInstrumentationKeyOutput)'


  - deployment: DeployWebsiteApp
    displayName: "Deploy website app"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployInfrastructureWebCore
    pool:
      vmImage: windows-latest        
    variables:
      ApplicationInsights.InstrumentationKey: ${{parameters.applicationInsightsInstrumentationKey}}
      AppSettings.Environment: ${{parameters.environment}}
      AppSettings.KeyVaultURL: ${{parameters.keyVaultURL}}
      AppSettings.ImagesStorageCDNURL: ${{parameters.imagesStorageCDNURL}}
      AppSettings.ImagesStorageURL: ${{parameters.imagesStorageURL}}
      AppSettings.PartImagesContainerName: ${{parameters.partImagesContainerName}}
      AppSettings.SetImagesContainerName: ${{parameters.setImagesContainerName}}
      AppSettings.RedisCacheConnectionString: ${{parameters.redisCacheConnectionString}}
      AppSettings.WebServiceURL: ${{parameters.serviceURL}}
      AppSettings.StorageAccountName: ${{parameters.storageAccountName}}
      AppSettings.CognitiveServicesSubscriptionKey: ${{parameters.cognitiveServicesSubscriptionKey}}
      AppSettings.CaptureStartErrors: ${{parameters.captureStartErrors}}
      ConnectionStrings.SamsAppConnectionString: ${{parameters.samsAppConnectionString}} 
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebsite.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -webAppEnvironment "${{parameters.environmentLowercase}}"  -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -contactEmailAddress "samsmithnz@gmail.com" -letsEncryptUniqueRoleAssignmentGuid "${{parameters.letsEncryptUniqueRoleAssignmentGuid}}" -letsEncryptAppServiceContributerClientSecret "${{parameters.letsEncryptAppServiceContributerClientSecret}}" 
            enabled: true
          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              WebAppName: '${{parameters.websiteName}}'
              DeployToSlotFlag: true
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SlotName: '${{parameters.stagingSlotName}}'
              Package: '$(build.artifactstagingdirectory)/drop/SamLearnsAzure.Web.zip'
              RemoveAdditionalFilesFlag: true
              TakeAppOfflineFlag: false
              RenameFilesFlag: true
              JSONFiles: '**/appsettings.json'
              AppSettings: '-ASPNETCORE_ENVIRONMENT "${{parameters.ASPNETCOREEnvironmentSetting}}"'
              ConfigurationSettings: '-ApplicationInsights.InstrumentationKey $(applicationInsightsInstrumentationKeyOutput)'


  - deployment: DeployWebsite2App
    displayName: "Deploy website2 app"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployInfrastructureWebCore
    pool:
      vmImage: windows-latest        
    variables:
      ApplicationInsights.InstrumentationKey: ${{parameters.applicationInsightsInstrumentationKey}}
      AppSettings.Environment: "${{parameters.environment}}2"
      AppSettings.KeyVaultURL: ${{parameters.keyVaultURL}}
      AppSettings.ImagesStorageCDNURL: ${{parameters.imagesStorageCDNURL}}
      AppSettings.ImagesStorageURL: ${{parameters.imagesStorageURL}}
      AppSettings.PartImagesContainerName: ${{parameters.partImagesContainerName}}
      AppSettings.SetImagesContainerName: ${{parameters.setImagesContainerName}}
      AppSettings.RedisCacheConnectionString: ${{parameters.redisCacheConnectionString}}
      AppSettings.WebServiceURL: ${{parameters.serviceURL}}
      AppSettings.StorageAccountName: ${{parameters.storageAccountName}}
      AppSettings.CognitiveServicesSubscriptionKey: ${{parameters.cognitiveServicesSubscriptionKey}}
      AppSettings.CaptureStartErrors: ${{parameters.captureStartErrors}}
      ConnectionStrings.SamsAppConnectionString: ${{parameters.samsAppConnectionString}}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebsite.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -webAppEnvironment "${{parameters.environmentLowercase}}2" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -contactEmailAddress "samsmithnz@gmail.com" -letsEncryptUniqueRoleAssignmentGuid "${{parameters.letsEncryptUniqueRoleAssignmentGuid2}}" -letsEncryptAppServiceContributerClientSecret "${{parameters.letsEncryptAppServiceContributerClientSecret}}" 
            enabled: true
          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              WebAppName: '${{parameters.website2Name}}'
              DeployToSlotFlag: true
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SlotName: '${{parameters.stagingSlotName}}'
              Package: '$(build.artifactstagingdirectory)/drop/SamLearnsAzure2.Web.zip'
              RemoveAdditionalFilesFlag: true
              TakeAppOfflineFlag: false
              RenameFilesFlag: true
              JSONFiles: '**/appsettings.json'
              AppSettings: '-ASPNETCORE_ENVIRONMENT "${{parameters.ASPNETCOREEnvironmentSetting}}"'
              ConfigurationSettings: '-ApplicationInsights.InstrumentationKey $(applicationInsightsInstrumentationKeyOutput)'

              
  - deployment: DeployFrontDoor
    displayName: "Deploy Front Door"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployInfrastructureWebCore
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureFrontDoor.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -customDomain "${{parameters.frontDoorDomainName}}"
            enabled: true


  - deployment: DeployFunctionalTests
    displayName: "Deploy functional tests on web1"
    environment: ${{parameters.environment}}
    dependsOn:
    - DeployCDN 
    - DeployRedis
    - DeployDatabase
    - DeployWebServiceApp
    - DeployWebsiteApp
    - DeployWebsite2App
    - DeployFrontDoor
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: VSTest@2
            displayName: 'Run functional smoke tests on website and web service'
            inputs:
              searchFolder: '$(build.artifactstagingdirectory)'
              testAssemblyVer2: |
                **\SamLearnsAzure.FunctionalTests\SamLearnsAzure.FunctionalTests.dll
              uiTests: true
              runSettingsFile: '$(build.artifactstagingdirectory)/drop/FunctionalTests/SamLearnsAzure.FunctionalTests/test.runsettings'
              overrideTestrunParameters: |
               -ServiceUrl "${{parameters.serviceStagingUrl}}" 
               -WebsiteUrl "${{parameters.websiteStagingUrl}}" 
               -Website2Url "${{parameters.website2StagingUrl}}" 
               -TestEnvironment "${{parameters.environment}}" 
               -KeyVaultURL "${{parameters.keyVaultURL}}" 
               -KeyVaultClientId "${{parameters.keyVaultClientId}}" 
               -KeyVaultClientSecret "${{parameters.keyVaultClientSecret}}"
            enabled: true  

            
  - deployment: DeploySwapServiceAppSlots
    displayName: "Deploy swap service slots"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployFunctionalTests
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Slots: web service'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              WebAppName: '${{parameters.serviceName}}'
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SourceSlot: '${{parameters.stagingSlotName}}'


  - deployment: DeploySwapWebsiteAppSlots
    displayName: "Deploy swap website slots"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployFunctionalTests
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Slots: website'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              WebAppName: '${{parameters.websiteName}}'
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SourceSlot: '${{parameters.stagingSlotName}}'


  - deployment: DeploySwapWebsite2AppSlots
    displayName: "Deploy swap website2 slots"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployFunctionalTests
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Slots: website'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              WebAppName: '${{parameters.website2Name}}'
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SourceSlot: '${{parameters.stagingSlotName}}'