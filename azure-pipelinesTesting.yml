trigger:
- master
pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

stages:
- stage: Build
  displayName: 'Build & Test stage'
  jobs:
  - job: BuildARMTemplates
    displayName: 'Build Copy ARM templates job'
    pool:
      vmImage: ${{parameters.vmImage}}
    steps:
    - task: CopyFiles@2
      displayName: 'Copy environment ARM template files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)\SamLearnsAzure\SamLearnsAzure.Environment.ARMTemplate'
        Contents: '**\*' # **\* = Copy all files and all files in sub directories
        TargetFolder: '$(build.artifactstagingdirectory)\EnvironmentARMTemplate'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

  - deployment: DeployInfrastructure
    displayName: "Deploy infrastructure to ${{parameters.environment}} job"
    environment: ${{parameters.environment}}
    pool:
      vmImage: "windows-latest"    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: | 
                $appPrefix = "samsapp"
                $environment = "PR456"
                $location = "East US" 
                $locationShort = "eu"                
                $keyVaultName = "$appPrefix-$environment-$locationShort-keyvault"
                $serviceAPIName = "$appPrefix-$environment-$locationShort-service"
                $webSiteName = "$appPrefix-$environment-$locationShort-web"
                $sqlserverName = "$appPrefix-$environment-$locationShort-sqlserver"
                $hostingPlanName = "$appPrefix-$environment-$locationShort-hostingplan"
                $storageAccountName = "$appPrefix$environment$($locationShort)storage"
                $actionGroupName = "$appPrefix-$environment-$locationShort-actionGroup"
                $actionGroupShortName = "$environment-actgrp"
                $applicationInsightsName = "$appPrefix-$environment-$locationShort-appinsights"
                $applicationInsightsAvailablityTestName = "Availability home page test-$applicationInsightsName"
                $redisCacheName = "$appPrefix-$environment-$locationShort-redis"
                $cdnName = "$appPrefix-$environment-$locationShort-cdn"   
                
                az group create --name "${{parameters.resourceGroupName}}" --location $location 
                az deployment group create --resource-group "${{parameters.resourceGroupName}}" --name $storageAccountName --template-file "$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/Templates/AzureStorage.json" --parameters storageAccountName=$storageAccountName
                az deployment group create --resource-group "${{parameters.resourceGroupName}}" --name $keyVaultName --template-file "$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/Templates/AzureKeyVault.json --parameters keyVaultName=$keyVaultName 
